/ fn name, argc /

fn sum 1 do 6 / arg1: [num] /
	set count length arg1
	set counter 0
	set sum 0
	fn cond 2 / arg1: num, arg2: num /
		comp comp arg1 arg2 -1
	fn body 2 / arg1: &num, arg2: num, arg3: [num] /
		set arg1 add val arg1 index arg3 arg2
	while / &fn condition, num argc, &.. args + body - same /
		ref cond 2 ref count 
		ref body 2 ref ref sum ref count ref arg1

print sum arr 3 1 2 3